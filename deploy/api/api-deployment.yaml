apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - args:
        - /usr/local/poetry/bin/poetry
        - run
        - uvicorn
        - historedge_backend.api.app:app
        - --root-path
        - "/api/v1/"
        - --log-level
        - "debug"
        - --access-log
        - --use-colors
        - --lifespan
        - "on"
        - --workers
        - "$(API_WORKERS)"
        - --port
        - "$(API_PORT)"
        - --host
        - "$(API_HOST)"
        env:
        - name: API_WORKERS
          valueFrom:
            configMapKeyRef:
              key: API_WORKERS
              name: env
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              key: API_PORT
              name: env
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              key: API_HOST
              name: env
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: env
        - name: GENERATE_SCHEMAS
          valueFrom:
            configMapKeyRef:
              key: GENERATE_SCHEMAS
              name: env
        - name: GZIP
          valueFrom:
            configMapKeyRef:
              key: GZIP
              name: env
        - name: HISTORY_DISTRIBUTOR_CHUNK_LENGTH
          valueFrom:
            configMapKeyRef:
              key: HISTORY_DISTRIBUTOR_CHUNK_LENGTH
              name: env
        - name: HTTPS_ONLY
          valueFrom:
            configMapKeyRef:
              key: HTTPS_ONLY
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_PORT
          value: $(DB_SERVICE_PORT)
        - name: POSTGRES_SERVER
          value: $(DB_SERVICE_HOST)
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: REDIS_HOST
          value: $(REDIS_SERVICE_HOST)
        - name: REDIS_PORT
          value: $(REDIS_SERVICE_PORT)
        - name: SENTRY
          valueFrom:
            configMapKeyRef:
              key: SENTRY
              name: env
        image: headsrooms/historedge:latest
        volumeMounts:
          - mountPath: /data
            name: data
        imagePullPolicy: "Always"
        name: api
        ports:
        - containerPort: 80
        resources: {}
      volumes:
        - name: data
          hostPath:
            path: /run/desktop/mnt/host/c/Users/Pablo/code/data-engineer-Pablo-Cabezas/data
      restartPolicy: Always
      serviceAccountName: ""
