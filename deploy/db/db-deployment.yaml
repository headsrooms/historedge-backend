apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
      - env:
        - name: API_WORKERS
          valueFrom:
            configMapKeyRef:
              key: API_WORKERS
              name: env
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: env
        - name: GENERATE_SCHEMAS
          valueFrom:
            configMapKeyRef:
              key: GENERATE_SCHEMAS
              name: env
        - name: GZIP
          valueFrom:
            configMapKeyRef:
              key: GZIP
              name: env
        - name: HISTORY_DISTRIBUTOR_CHUNK_LENGTH
          valueFrom:
            configMapKeyRef:
              key: HISTORY_DISTRIBUTOR_CHUNK_LENGTH
              name: env
        - name: HTTPS_ONLY
          valueFrom:
            configMapKeyRef:
              key: HTTPS_ONLY
              name: env
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: env
        - name: POSTGRES_SERVER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_SERVER
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: env
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_PORT
              name: env
        - name: SCRAPER_DISTRIBUTOR_CHUNK_LENGTH
          valueFrom:
            configMapKeyRef:
              key: SCRAPER_DISTRIBUTOR_CHUNK_LENGTH
              name: env
        - name: SENTRY
          valueFrom:
            configMapKeyRef:
              key: SENTRY
              name: env
        image: postgres:latest
        imagePullPolicy: ""
        name: db
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/pgdata
          name: pgdata
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata
status: {}
